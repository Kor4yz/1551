import pandas as pd
import carla
import time
import random
import os

SERVER_IP = "127.0.0.1"
THRESHOLD_CPU = 80  # –ï—Å–ª–∏ CPU > 80%, –ø–µ—Ä–µ–Ω–æ—Å–∏–º –º–∞—à–∏–Ω—ã
THRESHOLD_RAM = 90  # –ï—Å–ª–∏ RAM > 90%, —Ç–æ–∂–µ –ø–µ—Ä–µ–Ω–æ—Å–∏–º
THRESHOLD_GPU = 95  # –ï—Å–ª–∏ GPU > 95%, —Ç–æ–∂–µ –ø–µ—Ä–µ–Ω–æ—Å–∏–º
CHECK_INTERVAL = 10
CLIENT_LOG = "client_metrics.csv"
SERVER_LOG = "server_metrics.csv"

def redistribute_vehicles(client, num_vehicles):
    """–ü–µ—Ä–µ–Ω–æ—Å –º–∞—à–∏–Ω –Ω–∞ –∫–ª–∏–µ–Ω—Ç—Å–∫–∏–µ –Ω–æ—É—Ç–±—É–∫–∏"""
    world = client.get_world()
    vehicles = world.get_actors().filter('vehicle.*')
    vehicles = list(vehicles)

    vehicles = world.get_actors().filter('vehicle.*')
    print(f"üìã –ù–∞–π–¥–µ–Ω–æ {len(vehicles)} –º–∞—à–∏–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ")


    if len(vehicles) > num_vehicles:
        print(f"üî¥ –ü–µ—Ä–µ–Ω–æ—Å–∏–º {num_vehicles} –º–∞—à–∏–Ω –Ω–∞ –∫–ª–∏–µ–Ω—Ç–æ–≤...")
        for i in range(num_vehicles):
            if i < len(vehicles):
                vehicles[i].destroy()
                print(f"üöó –ú–∞—à–∏–Ω–∞ {i+1} —É–¥–∞–ª–µ–Ω–∞")

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É –∫–ª–∏–µ–Ω—Ç–∞–º –Ω–∞ —Å–ø–∞–≤–Ω –Ω–æ–≤—ã—Ö –º–∞—à–∏–Ω
        with open("client_command.txt", "w") as f:
            f.write(str(num_vehicles))

        print(f"‚úÖ {num_vehicles} –º–∞—à–∏–Ω –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω—ã!")
    else:
        print("‚ö†Ô∏è –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–∞—à–∏–Ω –¥–ª—è –ø–µ—Ä–µ–Ω–æ—Å–∞")


# –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É
client = carla.Client(SERVER_IP, 2000)
client.set_timeout(10.0)

print("üöÄ –ë–∞–ª–∞–Ω—Å–∏—Ä–æ–≤—â–∏–∫ –∑–∞–ø—É—â–µ–Ω. –°–ª–µ–¥–∏–º –∑–∞ —Å–µ—Ä–≤–µ—Ä–æ–º...")

while True:
    time.sleep(10)
    world = client.get_world()
    vehicles = world.get_actors().filter('vehicle.*')
    vehicles = list(vehicles)
    if  len(vehicles) == 0:
        print("‚ö†Ô∏è –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤, –±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤—â–∏–∫ –∑–∞–≤–µ—Ä—à–∞–µ—Ç —Ä–∞–±–æ—Ç—É.")
        break

    if not os.path.exists("server_metrics.csv"):
        print("‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞...")
        time.sleep(CHECK_INTERVAL)
        continue

    df_server = pd.read_csv("server_metrics.csv")
    last_data = df_server.tail(5)
    avg_cpu = last_data["CPU (%)"].mean()
    avg_ram = last_data["RAM (%)"].mean()
    avg_gpu = last_data["GPU (%)"].mean()

    print(f"üìä CPU: {avg_cpu:.2f}% | RAM: {avg_ram:.2f}% | GPU: {avg_gpu:.2f}%")

    if avg_cpu > THRESHOLD_CPU or avg_ram > THRESHOLD_RAM or avg_gpu > THRESHOLD_GPU:
        num_to_move = random.randint(5, 10)
        redistribute_vehicles(client, num_to_move)
    else:
        print("‚úÖ –°–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–æ—Ä–º–∞–ª—å–Ω–æ, –±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∫–∞ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è.")

    time.sleep(CHECK_INTERVAL)